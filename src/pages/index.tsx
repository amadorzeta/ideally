import type { NextPage } from "next";
import { useState } from "react";
import Head from "next/head";
import Cursor from "../components/Cursor";
import Input from "../components/Input";
import Task from "../components/Task";
import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
  const [isActive, setIsActive] = useState(false);
  //const hello = trpc.useQuery(["example.hello", { text: "from tRPC" }]);
  //const tasks = trpc.useQuery(["tasks.index", {}]);
  const tasks = [
    "aprender react hooks contruyendo un custom cursor",
    "armar el formulario on click",
    "aprender trpc para crear el endpoint",
    "aplicar estilos faltantes",
  ];

  const taskElements = tasks.map((task) => {
    return <Task goal={task} />;
  });

  const handleClick = () => {
    console.log(isActive);
    setIsActive(!isActive);
  };

  return (
    <>
      <Head>
        <title>Ideally</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main
        onClick={handleClick}
        className="bg-neutral-100 h-screen flex flex-col items-center cursor-none font-serif text-zinc-800"
      >
        <Cursor />
        <h1 className="text-8xl pt-10 tracking-tight text-black">Ideally,</h1>
        <h2 className="text-6xl py-10 tracking-tighter">
          what would you like to do today?
        </h2>
        <div className="w-1/2 space-y-4 cursor-auto">{taskElements}</div>
        <Input active={isActive} />
      </main>
    </>
  );
};

export default Home;

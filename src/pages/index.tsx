import type { NextPage } from "next";
import { useState } from "react";
import Head from "next/head";
import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
  const [isActive, setIsActive] = useState(false);

  const [tasksArray, setTasksArray] = useState([
    "aprender react hooks contruyendo un custom cursor",
    "aprender trpc para crear el endpoint",
    "aplicar estilos faltantes",
  ]);

  const Cursor = () => {
    return (
      <div className="bg-emerald-100 w-20 h-20 rounded-full flex items-center justify-center pointer-events-none">
        <div className="bg-indigo-800 h-12 w-2 absolute"></div>
        <div className="bg-indigo-800 h-12 w-2 absolute rotate-90"></div>
      </div>
    );
  };

  const handleClick = () => {
    setIsActive((prevState) => !prevState);
  };

  const TaskInput = () => {
    const [goal, setGoal] = useState("");

    const handleSubmit = () => {};
    const handleChange = () => {};

    return (
      <div className="opacity-75 w-3/4 h-screen flex flex-col items-center cursor-auto">
        <form className="w-full" onSubmit={handleSubmit}>
          <input
            className="w-3/4 border-4 border-black rounded-lg"
            type="text"
            value={goal}
            onChange={handleChange}
          />
        </form>
      </div>
    );
  };

  const Task = ({ goal }) => {
    return (
      <div className="w-full py-4 border rounded-lg">
        <p className="text-3xl underline">{goal}</p>
      </div>
    );
  };

  const taskElements = (
    <div className="w-1/2 space-y-4 cursor-auto">
      {tasksArray.map((task) => (
        <Task goal={task} />
      ))}
    </div>
  );

  //const hello = trpc.useQuery(["example.hello", { text: "from tRPC" }]);
  //const tasks = trpc.useQuery(["tasks.index", {}]);

  return (
    <>
      <Head>
        <title>Ideally</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main
        onClick={handleClick}
        className="bg-neutral-100 h-screen flex flex-col items-center cursor-none font-serif text-zinc-800"
      >
        <Cursor />
        <h1 className="text-8xl pt-10 tracking-tight text-black">Ideally,</h1>
        <h2 className="text-6xl py-10 tracking-tighter">
          what would you like to do today?
        </h2>
        {isActive ? <TaskInput /> : taskElements}
      </main>
    </>
  );
};

export default Home;
